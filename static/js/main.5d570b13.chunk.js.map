{"version":3,"sources":["views/LoginView/LoginView.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Navigation/Navigation.module.css","components/UserMenu/UserMenu.module.css","components/Filter/Filter.module.css","components/AuthNav/AuthNav.module.css","views/HomeView/HomeView.module.css","views/ContactsView/ContactsView.module.css","components/Container/Container.module.css","components/AppBar/AppBar.module.css","views/RegisterView/RegisterView.module.css","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","components/Container/Container.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","views/HomeView/HomeView.js","views/RegisterView/RegisterView.js","views/LoginView/LoginView.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-selectors.js","components/ContactList/ContactList.js","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","views/ContactsView/ContactsView.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","token","headers","common","Authorization","operations","register","createAsyncThunk","credentials","a","post","data","login","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","name","getIsFetchingCurrentUser","isFetchingCurrentUser","getErrorLogin","errorLogin","getErrorRegister","errorRegister","getLoading","isLoading","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","payload","pending","rejected","PrivateRoute","children","redirectTo","routeProps","useSelector","to","PublicRoute","restricted","shouldRedirect","Container","className","s","container","Navigation","exact","link","activeClassName","activeLink","UserMenu","dispatch","useDispatch","button","type","onClick","styles","color","backgroundColor","borderColor","AuthNav","activeStyle","AppBar","header","HomeView","title","RegisterView","useState","setName","setEmail","password","setPassword","error","handleChange","target","value","star","onSubmit","e","preventDefault","form","autoComplete","label","text","input","onChange","LoginView","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","getContacts","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactList","onDeleteContact","id","delete","then","catch","phonebookOperations","list","map","number","item","ContactForm","contact","setNumber","reset","find","alert","formItem","placeholder","currentTarget","Filter","phonebookActions","ContactsView","useEffect","App","path","autoClose","position","createReducer","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,MAAQ,yBAAyB,OAAS,4B,mBCA5HD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,SAAW,8BAA8B,MAAQ,2BAA2B,OAAS,8B,mBCAxID,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,4BAA4B,UAAY,+BAA+B,KAAO,4B,mBCA3KD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,iC,mBCA/DD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,KAAO,uBAAuB,OAAS,2B,mBCAjGD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,MAAQ,wB,mBCA9FD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,WAAa,8B,mBCA5DD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,0B,mBCAlED,EAAOC,QAAU,CAAC,UAAY,gCAAgC,MAAQ,8B,mBCAtED,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,OAAS,yB,kBCA3BD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,4BAA4B,MAAQ,4BAA4B,OAAS,+B,gMCErIC,IAAMC,SAASC,QAAU,2CAEzB,I,EAAMC,EAAQ,SACNA,GACAH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAF1DA,EAAQ,WAKNH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAyDvCC,EAPI,CACfC,SA/CaC,YAAiB,gBAAD,uCAAkB,WAAMC,GAAN,iBAAAC,EAAA,+EAEpBX,IAAMY,KAAK,gBAAiBF,GAFR,uBAEnCG,EAFmC,EAEnCA,KACRV,EAAUU,EAAKV,OAH4B,kBAIpCU,GAJoC,oGAAlB,uDAgD7BC,MAtCUL,YAAiB,aAAD,uCAAe,WAAMC,GAAN,iBAAAC,EAAA,+EAEdX,IAAMY,KAAK,eAAgBF,GAFb,uBAE7BG,EAF6B,EAE7BA,KACRV,EAAUU,EAAKV,OAHsB,kBAI9BU,GAJ8B,oGAAf,uDAuC1BE,OA7BWN,YAAiB,cAAD,uCAAgB,WAAMC,GAAN,SAAAC,EAAA,+EAEjCX,IAAMY,KAAK,gBAAiBF,GAFK,OAGvCP,IAHuC,uGAAhB,uDA8B3Ba,iBAvBqBP,YACrB,eADqC,uCAErC,WAAOQ,EAAGC,GAAV,qBAAAP,EAAA,yDACUQ,EAAQD,EAASE,WAGA,QAFjBC,EAAiBF,EAAMG,KAAKnB,OAFtC,yCAKee,EAASK,mBALxB,cAQIpB,EAAUkB,GARd,kBAW+BrB,IAAMwB,IAAI,kBAXzC,uBAWgBX,EAXhB,EAWgBA,KAXhB,kBAYeA,GAZf,4FAFqC,0DCrB1BY,EARO,CAClBC,cAbkB,SAAAP,GAAK,OAAIA,EAAMG,KAAKK,YActCC,YAZgB,SAAAT,GAAK,OAAIA,EAAMG,KAAKO,KAAKC,MAazCC,yBAX6B,SAAAZ,GAAK,OAAIA,EAAMG,KAAKU,uBAYjDC,cAVkB,SAAAd,GAAK,OAAIA,EAAMG,KAAKY,YAWtCC,iBATqB,SAAAhB,GAAK,OAAIA,EAAMG,KAAKc,eAUzCC,WARe,SAAAlB,GAAK,OAAIA,EAAMG,KAAKgB,Y,OC8CxBC,EA5CGC,YAAY,CAC1BV,KAAM,OACNW,aAXiB,CACjBZ,KAAM,CAAEC,KAAM,KAAMY,MAAO,MAC3BvC,MAAO,KACPwB,YAAY,EACZK,uBAAuB,EACvBE,WAAY,KACZE,cAAe,MAMfO,eAAa,mBACRC,EAAepC,SAASqC,WADhB,SAC2B1B,EAAO2B,GACvC3B,EAAMU,KAAOiB,EAAOC,QAAQlB,KAC5BV,EAAMhB,MAAQ2C,EAAOC,QAAQ5C,MAC7BgB,EAAMQ,YAAa,KAJd,cAMRiB,EAAepC,SAASwC,SANhB,SAMyB7B,EAAO2B,GACrC3B,EAAMiB,cAAgB,QAPjB,cASRQ,EAAepC,SAASyC,UAThB,SAS0B9B,EAAO2B,GACtC3B,EAAMiB,cAAgB,0CAVjB,cAYRQ,EAAe9B,MAAM+B,WAZb,SAYwB1B,EAAO2B,GACpC3B,EAAMU,KAAOiB,EAAOC,QAAQlB,KAC5BV,EAAMhB,MAAQ2C,EAAOC,QAAQ5C,MAC7BgB,EAAMQ,YAAa,KAfd,cAiBRiB,EAAe9B,MAAMkC,SAjBb,SAiBsB7B,EAAO2B,GAClC3B,EAAMe,WAAa,QAlBd,cAoBRU,EAAe9B,MAAMmC,UApBb,SAoBuB9B,EAAO2B,GACnC3B,EAAMe,WAAa,4CArBd,cAuBRU,EAAe7B,OAAO8B,WAvBd,SAuByB1B,EAAO2B,GACrC3B,EAAMU,KAAO,CAAEC,KAAM,KAAMY,MAAO,MAClCvB,EAAMhB,MAAQ,KACdgB,EAAMQ,YAAa,KA1Bd,cA4BRiB,EAAe5B,iBAAiBgC,SA5BxB,SA4BiC7B,EAAO2B,GAC7C3B,EAAMa,uBAAwB,KA7BzB,cA+BRY,EAAe5B,iBAAiB6B,WA/BxB,SA+BmC1B,EAAO2B,GAC/C3B,EAAMU,KAAOiB,EAAOC,QACpB5B,EAAMQ,YAAa,EACnBR,EAAMa,uBAAwB,KAlCzB,cAoCRY,EAAe5B,iBAAiBiC,UApCxB,SAoCkC9B,EAAO2B,GAC9C3B,EAAMa,uBAAwB,KArCzB,KAyCjB,Q,OC7Ce,SAASkB,EAAT,GAIX,IAHAC,EAGD,EAHCA,SAGD,IAFCC,kBAED,MAFc,IAEd,EADIC,EACJ,yCACO1B,EAAa2B,YAAY7B,EAAcC,eAC7C,OACI,cAAC,IAAD,2BAAW2B,GAAX,aACK1B,EAAawB,EAAW,cAAC,IAAD,CAAUI,GAAIH,OCTpC,SAASI,EAAT,GAKX,IAJAL,EAID,EAJCA,SAID,IAHCM,kBAGD,aAFCL,kBAED,MAFc,IAEd,EADIC,EACJ,sDAEOK,EADaJ,YAAY7B,EAAcC,gBACR+B,EACrC,OACI,cAAC,IAAD,2BAAWJ,GAAX,aACKK,EAAiB,cAAC,IAAD,CAAUH,GAAIH,IAAiBD,K,6BCb9CQ,EAJG,SAAC,GAAD,IAAGR,EAAH,EAAGA,SAAH,OACd,qBAAKS,UAAWC,IAAEC,UAAlB,SAA8BX,K,iBCsBnBY,MArBf,WACI,IAAMpC,EAAa2B,YAAY7B,EAAcC,eAC7C,OACI,gCACI,cAAC,IAAD,CAAS6B,GAAG,IAAIS,OAAK,EAACJ,UAAWC,IAAEI,KAAMC,gBAAiBL,IAAEM,WAA5D,kBAGCxC,GACG,cAAC,IAAD,CACI4B,GAAG,YACHS,OAAK,EACLJ,UAAWC,IAAEI,KACbC,gBAAiBL,IAAEM,WAJvB,0B,iBCTD,SAASC,IACpB,IAAMC,EAAWC,cACXxC,EAAOwB,YAAY7B,EAAcG,aAEvC,OACI,sBAAKgC,UAAWC,IAAEC,UAAlB,UACI,uBAAMF,UAAWC,IAAE/B,KAAnB,oBAAiCA,EAAjC,OACA,wBACI8B,UAAWC,IAAEU,OACbC,KAAK,SACLC,QAAS,kBAAMJ,EAASzB,EAAe7B,WAH3C,wB,qBCPN2D,EAAS,CACXP,WAAY,CACRQ,MAAO,UACPC,gBAAiB,oBACjBC,YAAa,qBAIN,SAASC,IACpB,OACI,gCACI,cAAC,IAAD,CACIvB,GAAG,YACHS,OAAK,EACLJ,UAAWC,IAAEI,KACbc,YAAaL,EAAOP,WAJxB,qBAQA,cAAC,IAAD,CACIZ,GAAG,SACHS,OAAK,EACLJ,UAAWC,IAAEI,KACbc,YAAaL,EAAOP,WAJxB,wB,qBChBG,SAASa,IACpB,IAAMrD,EAAa2B,YAAY7B,EAAcC,eAE7C,OACI,yBAAQkC,UAAWC,IAAEoB,OAArB,UACI,cAAC,EAAD,IAECtD,EAAa,cAACyC,EAAD,IAAe,cAACU,EAAD,O,qBCN1BI,EANE,kBACb,qBAAKtB,UAAWC,IAAEC,UAAlB,SACI,oBAAIF,UAAWC,IAAEsB,MAAjB,4B,wBCGO,SAASC,IACpB,IAAMf,EAAWC,cADkB,EAEXe,mBAAS,IAFE,mBAE5BvD,EAF4B,KAEtBwD,EAFsB,OAGTD,mBAAS,IAHA,mBAG5B3C,EAH4B,KAGrB6C,EAHqB,OAIHF,mBAAS,IAJN,mBAI5BG,EAJ4B,KAIlBC,EAJkB,KAM7BC,EAAQpC,YAAY7B,EAAcU,kBAElCwD,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAU9D,EAAoB,EAApBA,KAAM+D,EAAc,EAAdA,MACpC,OAAQ/D,GACJ,IAAK,OACD,OAAOwD,EAAQO,GACnB,IAAK,QACD,OAAON,EAASM,GACpB,IAAK,WACD,OAAOJ,EAAYI,GACvB,QACI,SAYZ,OACI,gCACI,mBAAGjC,UAAWC,IAAEsB,MAAhB,iCACCO,GAAS,mBAAG9B,UAAWC,IAAEiC,KAAhB,SAAuBJ,IACjC,uBAAMK,SAZO,SAAAC,GACjBA,EAAEC,iBACF5B,EAASzB,EAAepC,SAAS,CAAEsB,OAAMY,QAAO8C,cAChDF,EAAQ,IACRC,EAAS,IACTE,EAAY,KAOsB7B,UAAWC,IAAEqC,KAAMC,aAAa,MAA9D,UACI,wBAAOvC,UAAWC,IAAEuC,MAApB,UACI,oBAAGxC,UAAWC,IAAEwC,KAAhB,qBACY,sBAAMzC,UAAWC,IAAEiC,KAAnB,kBAEZ,uBACIlC,UAAWC,IAAEyC,MACb9B,KAAK,OACL1C,KAAK,OACL+D,MAAO/D,EACPyE,SAAUZ,OAIlB,wBAAO/B,UAAWC,IAAEuC,MAApB,UACI,oBAAGxC,UAAWC,IAAEwC,KAAhB,0BACiB,sBAAMzC,UAAWC,IAAEiC,KAAnB,kBAEjB,uBACIlC,UAAWC,IAAEyC,MACb9B,KAAK,QACL1C,KAAK,QACL+D,MAAOnD,EACP6D,SAAUZ,OAIlB,wBAAO/B,UAAWC,IAAEuC,MAApB,UACI,oBAAGxC,UAAWC,IAAEwC,KAAhB,qBACY,sBAAMzC,UAAWC,IAAEiC,KAAnB,kBAEZ,uBACIlC,UAAWC,IAAEyC,MACb9B,KAAK,WACL1C,KAAK,WACL+D,MAAOL,EACPe,SAAUZ,OAIlB,wBAAQ/B,UAAWC,IAAEU,OAAQC,KAAK,SAAlC,kC,sBC1ED,SAASgC,KACpB,IAAMnC,EAAWC,cADe,EAENe,mBAAS,IAFH,mBAEzB3C,EAFyB,KAElB6C,EAFkB,OAGAF,mBAAS,IAHT,mBAGzBG,EAHyB,KAGfC,EAHe,KAK1BC,EAAQpC,YAAY7B,EAAcQ,eAElC0D,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAU9D,EAAoB,EAApBA,KAAM+D,EAAc,EAAdA,MACpC,OAAQ/D,GACJ,IAAK,QACD,OAAOyD,EAASM,GACpB,IAAK,WACD,OAAOJ,EAAYI,GACvB,QACI,SAWZ,OACI,gCACI,mBAAGjC,UAAWC,KAAEsB,MAAhB,kCACCO,GAAS,mBAAG9B,UAAWC,KAAE6B,MAAhB,SAAwBA,IAClC,uBAAMK,SAXO,SAAAC,GACjBA,EAAEC,iBACF5B,EAASzB,EAAe9B,MAAM,CAAE4B,QAAO8C,cACvCD,EAAS,IACTE,EAAY,KAOsB7B,UAAWC,KAAEqC,KAAMC,aAAa,MAA9D,UACI,wBAAOvC,UAAWC,KAAEuC,MAApB,UACI,mBAAGxC,UAAWC,KAAEwC,KAAhB,2BACA,uBACIzC,UAAWC,KAAEyC,MACb9B,KAAK,QACL1C,KAAK,QACL+D,MAAOnD,EACP6D,SAAUZ,OAIlB,wBAAO/B,UAAWC,KAAEuC,MAApB,UACI,mBAAGxC,UAAWC,KAAEwC,KAAhB,sBACA,uBACIzC,UAAWC,KAAEyC,MACb9B,KAAK,WACL1C,KAAK,WACL+D,MAAOL,EACPe,SAAUZ,OAIlB,wBAAQ/B,UAAWC,KAAEU,OAAQC,KAAK,SAAlC,2BCxDT,IAAMiC,GAAuBC,YAChC,iCAESC,GAAuBD,YAChC,iCAESE,GAAqBF,YAAa,+BAElCG,GAAoBH,YAAa,8BACjCI,GAAoBJ,YAAa,8BACjCK,GAAkBL,YAAa,4BAE/BM,GAAuBN,YAChC,iCAESO,GAAuBP,YAChC,iCAESQ,GAAqBR,YAAa,+BAElCS,GAAeT,YAAa,yB,SCpB5BU,GAAc,SAAAjG,GAAK,OAAIA,EAAMkG,SAASC,OACtCC,GAAY,SAAApG,GAAK,OAAIA,EAAMkG,SAASG,QAEpCC,GAAqBC,aAC9B,CAACN,GAAaG,KACd,SAACF,EAAUG,GACP,IAAMG,EAAmBH,EAAOI,cAEhC,OAAOP,EAASG,QAAO,qBAAG1F,KACjB8F,cAAcC,SAASF,S,oBCJzB,SAASG,KACpB,IAAMT,EAAW/D,YAAYmE,IACvBpD,EAAWC,cACXyD,EAAkB,SAAAC,GAAE,OAAI3D,EC2BL,SAAA2D,GAAE,OAAI,SAAA3D,GAC/BA,EAAS2C,MAEThH,IACKiI,OADL,oBACyBD,IACpBE,MAAK,kBAAM7D,EAAS4C,GAAqBe,OACzCG,OAAM,SAAAzC,GAAK,OAAIrB,EAAS6C,GAAmBxB,QDjCT0C,CAAkCJ,KAEzE,OACI,qBAAKpE,UAAWC,KAAEC,UAAlB,SACI,oBAAIF,UAAWC,KAAEwE,KAAjB,SACKhB,EAASiB,KAAI,gBAAGN,EAAH,EAAGA,GAAIlG,EAAP,EAAOA,KAAMyG,EAAb,EAAaA,OAAb,OACV,qBAAa3E,UAAWC,KAAE2E,KAA1B,UACI,oBAAG5E,UAAWC,KAAEwC,KAAhB,UACKvE,EADL,KACayG,KAEb,wBACI/D,KAAK,SACLC,QAAS,kBAAMsD,EAAgBC,IAC/BpE,UAAWC,KAAEU,OAHjB,sBAJKyD,U,wBEVd,SAASS,KACpB,IAAMpB,EAAW/D,YAAY8D,IACvB/C,EAAWC,cAEXyB,EAAW,SAACjE,EAAMyG,GAAP,OACblE,EDYkB,SAACvC,EAAMyG,GAAP,OAAkB,SAAAlE,GACxC,IAAMqE,EAAU,CACZ5G,OACAyG,UAGJlE,EAASwC,MAET7G,IACKY,KAAK,YAAa8H,GAClBR,MAAK,gBAAGrH,EAAH,EAAGA,KAAH,OAAcwD,EAASyC,GAAkBjG,OAC9CsH,OAAM,SAAAzC,GAAK,OAAIrB,EAAS0C,GAAgBrB,QCvBhC0C,CAA+BtG,EAAMyG,KALhB,EAOVlD,mBAAS,IAPC,mBAO3BvD,EAP2B,KAOrBwD,EAPqB,OAQND,mBAAS,IARH,mBAQ3BkD,EAR2B,KAQnBI,EARmB,KAiC5BC,EAAQ,WACVtD,EAAQ,IACRqD,EAAU,KAGd,OACI,uBAAM5C,SAjBW,SAAAC,GACjBA,EAAEC,kBAZEoB,EAASwB,MAAK,SAAAH,GAAO,OAAI5G,IAAS4G,EAAQ5G,SAC1CgH,MAAM,GAAD,OAAIhH,EAAJ,4BACE,GAGE,KAATA,GAA0B,KAAXyG,GACfO,MAAM,yBACC,QAFX,KAaA/C,EAASjE,EAAMyG,GACfK,MAS8BhF,UAAWC,KAAEqC,KAA3C,UACI,wBAAOtC,UAAWC,KAAEkF,SAApB,iBAEG,uBACKvE,KAAK,OACL1C,KAAK,OACL+D,MAAO/D,EACPkH,YAAY,oBACZzC,SAAU,SAAAP,GAAC,OAAIV,EAAQU,EAAEiD,cAAcpD,QACvCjC,UAAWC,KAAEyC,WAIrB,wBAAO1C,UAAWC,KAAEkF,SAApB,mBAEI,uBACIvE,KAAK,MACL1C,KAAK,SACL+D,MAAO0C,EACPS,YAAY,sBACZzC,SAAU,SAAAP,GAAC,OAAI2C,EAAU3C,EAAEiD,cAAcpD,QACzCjC,UAAWC,KAAEyC,WAGrB,wBAAQ9B,KAAK,SAASZ,UAAWC,KAAEU,OAAnC,4B,wBChEG,SAAS2E,KACpB,IAAMrD,EAAQvC,YAAYiE,IACpBlD,EAAWC,cAGjB,OACI,qBAAKV,UAAWC,KAAEC,UAAlB,SACI,wBAAOF,UAAWC,KAAEuC,MAApB,kCAEG,uBACK5B,KAAK,OACLqB,MAAOA,EACPU,SATC,SAAAP,GAAC,OAAI3B,EAAS8E,GAA8BnD,EAAEJ,OAAOC,SAUtDjC,UAAWC,KAAEyC,a,wBCTlB,SAAS8C,KACpB,IAAM/E,EAAWC,cAIjB,OAFA+E,qBAAU,kBAAMhF,EHCS,uCAAM,WAAMA,GAAN,iBAAA1D,EAAA,6DAC/B0D,EAASoC,MADsB,kBAGJzG,IAAMwB,IAAI,aAHN,gBAGnBX,EAHmB,EAGnBA,KACRwD,EAASsC,GAAqB9F,IAJH,gDAM3BwD,EAASuC,GAAmB,EAAD,KANA,yDAAN,yDGDkB,CAACvC,IAGxC,sBAAKT,UAAWC,KAAEC,UAAlB,UACI,qBAAIF,UAAWC,KAAEsB,MAAjB,UACK,IADL,eAIA,cAACsD,GAAD,IACA,0CACA,cAACS,GAAD,IACA,cAACpB,GAAD,OCoCGwB,I,MAAAA,GAxCf,WACE,IAAMtH,EAAwBsB,YAC5B7B,EAAcM,0BAGVsC,EAAWC,cAMjB,OAJA+E,qBAAU,WACRhF,EAASzB,EAAe5B,sBACvB,CAACqD,KAGDrC,GACC,eAAC,EAAD,WACE,cAACgD,EAAD,IAEA,eAAC,IAAD,WACE,cAACxB,EAAD,CAAa+F,KAAK,IAAIvF,OAAK,EAA3B,SACE,cAAC,EAAD,MAGF,cAACR,EAAD,CAAa+F,KAAK,YAAY9F,YAAU,EAACL,WAAW,YAApD,SACE,cAACgC,EAAD,MAGF,cAAC5B,EAAD,CAAa+F,KAAK,SAAS9F,YAAU,EAACL,WAAW,YAAjD,SACE,cAACoD,GAAD,MAGF,cAACtD,EAAD,CAAcqG,KAAK,YAAYnG,WAAW,SAA1C,SACE,cAACgG,GAAD,SAIJ,cAAC,IAAD,CAAgBI,UAAW,IAAMC,SAAS,mB,kECtC5CnC,GAAQoC,YAAc,IAAD,qBACtB/C,IAAuB,SAAC1F,EAAD,YAAM8B,WADP,eAEtB+D,IAAoB,SAAC3F,EAAD,YAAU4B,SAAV,oBAAqC5B,OAFnC,eAGtB8F,IAAuB,SAAC9F,EAAD,OAAU4B,EAAV,EAAUA,QAAV,OACpB5B,EAAMqG,QAAO,qBAAGQ,KAAgBjF,QAJb,KAOrByE,GAASkC,YAAc,GAAD,eACvBvC,IAAe,SAAChG,EAAD,YAAU4B,YAGxB4G,GAAUD,aAAc,GAAD,qBACxBjD,IAAuB,kBAAM,KADL,eAExBE,IAAuB,kBAAM,KAFL,eAGxBC,IAAqB,kBAAM,KAHH,eAIxBC,IAAoB,kBAAM,KAJF,eAKxBC,IAAoB,kBAAM,KALF,eAMxBC,IAAkB,kBAAM,KANA,eAOxBC,IAAuB,kBAAM,KAPL,eAQxBC,IAAuB,kBAAM,KARL,eASxBC,IAAqB,kBAAM,KATH,KAYd0C,gBAAgB,CAC3BtC,SACAE,UACAmC,aCzBEE,GAAU,uBACTC,YAAqB,CACpBC,kBAAmB,CACfC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHtD,CAMZC,OAGEC,GAAoB,CACtBC,IAAK,OACLC,aACAC,UAAW,CAAC,UAGHC,GAAQC,YAAe,CAChCC,QAAS,CACLxJ,KAAMyJ,aAAeP,GAAmBQ,GACxC3D,SAAU4D,IAEdpB,cACAqB,UAAUC,IAGDC,GAAYC,aAAaT,I,MC/BtCU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUZ,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAajB,QAAS,KAAMyB,UAAWA,GAAvC,SACE,cAAC,IAAD,UACE,cAAC,GAAD,YAKRK,SAASC,eAAe,W","file":"static/js/main.5d570b13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginView_form__65cN2\",\"label\":\"LoginView_label__xIWEX\",\"input\":\"LoginView_input__1y3qY\",\"button\":\"LoginView_button__1sdK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Y6yv\",\"formItem\":\"ContactForm_formItem__3Bajk\",\"input\":\"ContactForm_input__eIa-T\",\"button\":\"ContactForm_button__sFgsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__mEAle\",\"text\":\"ContactList_text__KwEKW\",\"button\":\"ContactList_button__2MpYc\",\"container\":\"ContactList_container__23bdA\",\"list\":\"ContactList_list__13_f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__p1JlU\",\"activeLink\":\"Navigation_activeLink__1RSxx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__23_uo\",\"name\":\"UserMenu_name__2_T_t\",\"button\":\"UserMenu_button__1d4ci\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1hUTb\",\"label\":\"Filter_label__33kMp\",\"input\":\"Filter_input__3qMOg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__299Nm\",\"activeLink\":\"AuthNav_activeLink__G5fva\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomeView_container__1WNgv\",\"title\":\"HomeView_title__1Symj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsView_container__10aGY\",\"title\":\"ContactsView_title__1rbbS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Ka7z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1sB4c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterView_form__3UnKW\",\"input\":\"RegisterView_input__1TEsn\",\"label\":\"RegisterView_label__3X9hN\",\"button\":\"RegisterView_button__2_Cvj\"};","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n    try {\r\n        const { data } = await axios.post('/users/signup', credentials);\r\n        token.set(data.token);\r\n        return data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n});\r\n\r\nconst login = createAsyncThunk('auth/login', async credentials => {\r\n    try {\r\n        const { data } = await axios.post('/users/login', credentials);\r\n        token.set(data.token);\r\n        return data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n});\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async credentials => {\r\n    try {\r\n        await axios.post('/users/logout', credentials);\r\n        token.unset();\r\n    } catch (error) { }\r\n});\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n    'auth/refresh',\r\n    async (_, thunkAPI) => {\r\n        const state = thunkAPI.getState();\r\n        const persistedToken = state.auth.token;\r\n\r\n        if (persistedToken === null) {\r\n            return thunkAPI.rejectWithValue();\r\n        }\r\n\r\n        token.set(persistedToken);\r\n\r\n        try {\r\n            const { data } = await axios.get('/users/current');\r\n            return data;\r\n        } catch (error) { }\r\n    },\r\n);\r\n\r\nconst operations = {\r\n    register,\r\n    login,\r\n    logOut,\r\n    fetchCurrentUser,\r\n};\r\n\r\nexport default operations;","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getIsFetchingCurrentUser = state => state.auth.isFetchingCurrentUser;\r\n\r\nconst getErrorLogin = state => state.auth.errorLogin;\r\n\r\nconst getErrorRegister = state => state.auth.errorRegister;\r\n\r\nconst getLoading = state => state.auth.isLoading;\r\n\r\nconst authSelectors = {\r\n    getIsLoggedIn,\r\n    getUsername,\r\n    getIsFetchingCurrentUser,\r\n    getErrorLogin,\r\n    getErrorRegister,\r\n    getLoading,\r\n};\r\nexport default authSelectors;","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n    user: { name: null, email: null },\r\n    token: null,\r\n    isLoggedIn: false,\r\n    isFetchingCurrentUser: false,\r\n    errorLogin: null,\r\n    errorRegister: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    extraReducers: {\r\n        [authOperations.register.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [authOperations.register.pending](state, action) {\r\n            state.errorRegister = null;\r\n        },\r\n        [authOperations.register.rejected](state, action) {\r\n            state.errorRegister = 'Registration error. Please try again';\r\n        },\r\n        [authOperations.login.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [authOperations.login.pending](state, action) {\r\n            state.errorLogin = null;\r\n        },\r\n        [authOperations.login.rejected](state, action) {\r\n            state.errorLogin = 'Something went wrong. Please try again';\r\n        },\r\n        [authOperations.logOut.fulfilled](state, action) {\r\n            state.user = { name: null, email: null };\r\n            state.token = null;\r\n            state.isLoggedIn = false;\r\n        },\r\n        [authOperations.fetchCurrentUser.pending](state, action) {\r\n            state.isFetchingCurrentUser = true;\r\n        },\r\n        [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n            state.user = action.payload;\r\n            state.isLoggedIn = true;\r\n            state.isFetchingCurrentUser = false;\r\n        },\r\n        [authOperations.fetchCurrentUser.rejected](state, action) {\r\n            state.isFetchingCurrentUser = false;\r\n        },\r\n    },\r\n});\r\nexport default authSlice.reducer;","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n/**\r\n * 1. Он должен повторять API Route\r\n *  2. Он должен рендерить Route\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на redirectTo\r\n */\r\n\r\nexport default function PrivateRoute({\r\n    children,\r\n    redirectTo = '/',\r\n    ...routeProps\r\n}) {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    return (\r\n        <Route {...routeProps}>\r\n            {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n        </Route>\r\n    );\r\n}","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\r\n * - В противном случае рендерит компонент\r\n *\r\n */\r\n\r\nexport default function PublicRoute({\r\n    children,\r\n    restricted = false,\r\n    redirectTo = '/',\r\n    ...routeProps\r\n}) {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    const shouldRedirect = isLoggedIn && restricted;\r\n    return (\r\n        <Route {...routeProps}>\r\n            {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n        </Route>\r\n    );\r\n}","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n    <div className={s.container}>{children}</div>\r\n);\r\n\r\nexport default Container;","import { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport s from './Navigation.module.css';\r\n\r\nfunction Navigation() {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    return (\r\n        <nav>\r\n            <NavLink to=\"/\" exact className={s.link} activeClassName={s.activeLink}>\r\n                Home\r\n            </NavLink>\r\n            {isLoggedIn && (\r\n                <NavLink\r\n                    to=\"/contacts\"\r\n                    exact\r\n                    className={s.link}\r\n                    activeClassName={s.activeLink}\r\n                >\r\n                    Contacts\r\n                </NavLink>\r\n            )}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import { useDispatch, useSelector } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport s from './UserMenu.module.css';\r\n\r\nexport default function UserMenu() {\r\n    const dispatch = useDispatch();\r\n    const name = useSelector(authSelectors.getUsername);\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <span className={s.name}>Hello, {name}!</span>\r\n            <button\r\n                className={s.button}\r\n                type=\"button\"\r\n                onClick={() => dispatch(authOperations.logOut())}\r\n            >\r\n                Log out\r\n      </button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css';\r\n\r\nconst styles = {\r\n    activeLink: {\r\n        color: '#ffffff',\r\n        backgroundColor: 'rgb(70, 100, 100)',\r\n        borderColor: 'rgb(50, 80, 100)',\r\n    },\r\n};\r\n\r\nexport default function AuthNav() {\r\n    return (\r\n        <div>\r\n            <NavLink\r\n                to=\"/register\"\r\n                exact\r\n                className={s.link}\r\n                activeStyle={styles.activeLink}\r\n            >\r\n                Sign up\r\n            </NavLink>\r\n            <NavLink\r\n                to=\"/login\"\r\n                exact\r\n                className={s.link}\r\n                activeStyle={styles.activeLink}\r\n            >\r\n                Sign in\r\n      </NavLink>\r\n        </div>\r\n    );\r\n}","import { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport s from './AppBar.module.css';\r\n\r\nexport default function AppBar() {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <Navigation />\r\n\r\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n        </header>\r\n    );\r\n}","import s from './HomeView.module.css';\r\n\r\nconst HomeView = () => (\r\n    <div className={s.container}>\r\n        <h1 className={s.title}> Welcome!!!</h1>\r\n    </div>\r\n);\r\n\r\nexport default HomeView;","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authOperations } from '../../redux/auth';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nimport s from './RegisterView.module.css';\r\n\r\nexport default function RegisterView() {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const error = useSelector(authSelectors.getErrorRegister);\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        switch (name) {\r\n            case 'name':\r\n                return setName(value);\r\n            case 'email':\r\n                return setEmail(value);\r\n            case 'password':\r\n                return setPassword(value);\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(authOperations.register({ name, email, password }));\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <p className={s.title}>Create your account</p>\r\n            {error && <p className={s.star}>{error}</p>}\r\n            <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\r\n                <label className={s.label}>\r\n                    <p className={s.text}>\r\n                        Username<span className={s.star}>*</span>\r\n                    </p>\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <label className={s.label}>\r\n                    <p className={s.text}>\r\n                        Email address<span className={s.star}>*</span>\r\n                    </p>\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <label className={s.label}>\r\n                    <p className={s.text}>\r\n                        Password<span className={s.star}>*</span>\r\n                    </p>\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <button className={s.button} type=\"submit\">\r\n                    Create account\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport s from './LoginView.module.css';\r\n\r\nexport default function LoginView() {\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const error = useSelector(authSelectors.getErrorLogin);\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        switch (name) {\r\n            case 'email':\r\n                return setEmail(value);\r\n            case 'password':\r\n                return setPassword(value);\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(authOperations.login({ email, password }));\r\n        setEmail('');\r\n        setPassword('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <p className={s.title}>Sign in to Phonebook</p>\r\n            {error && <p className={s.error}>{error}</p>}\r\n            <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\r\n                <label className={s.label}>\r\n                    <p className={s.text}>Email address</p>\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <label className={s.label}>\r\n                    <p className={s.text}>Password</p>\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <button className={s.button} type=\"submit\">\r\n                    Sign in\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n    'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n    'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n    'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n    'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n    [getContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n\r\n        return contacts.filter(({ name }) =>\r\n            name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    },\r\n);","\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as phonebookOperations from '../../redux/phonebook/phonebook-operations';\r\nimport { getVisibleContacts } from '../../redux/phonebook/phonebook-selectors';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n    const contacts = useSelector(getVisibleContacts);\r\n    const dispatch = useDispatch();\r\n    const onDeleteContact = id => dispatch(phonebookOperations.deleteContact(id));\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <ul className={s.list}>\r\n                {contacts.map(({ id, name, number }) => (\r\n                    <li key={id} className={s.item}>\r\n                        <p className={s.text}>\r\n                            {name}: {number}\r\n                        </p>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => onDeleteContact(id)}\r\n                            className={s.button}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}","import axios from 'axios';\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n} from './phonebook-actions';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n    try {\r\n        const { data } = await axios.get('/contacts');\r\n        dispatch(fetchContactsSuccess(data));\r\n    } catch (error) {\r\n        dispatch(fetchContactsError(error));\r\n    }\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n    const contact = {\r\n        name,\r\n        number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(deleteContactSuccess(id)))\r\n        .catch(error => dispatch(deleteContactError(error)));\r\n};","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\r\nimport * as phonebookOperations from '../../redux/phonebook/phonebook-operations';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n    const contacts = useSelector(getContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (name, number) =>\r\n        dispatch(phonebookOperations.addContact(name, number));\r\n\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const contactValidation = () => {\r\n        if (contacts.find(contact => name === contact.name)) {\r\n            alert(`${name} is already in contacts`);\r\n            return true;\r\n        }\r\n\r\n        if (name === '' || number === '') {\r\n            alert('Please enter all data');\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (contactValidation()) {\r\n            return;\r\n        }\r\n\r\n        onSubmit(name, number);\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.form}>\r\n            <label className={s.formItem}>\r\n                Name\r\n               <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Сontact name\"\r\n                    onChange={e => setName(e.currentTarget.value)}\r\n                    className={s.input}\r\n                />\r\n            </label>\r\n\r\n            <label className={s.formItem}>\r\n                Number\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    placeholder=\"Сontact number\"\r\n                    onChange={e => setNumber(e.currentTarget.value)}\r\n                    className={s.input}\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className={s.button}>\r\n                Add contact\r\n            </button>\r\n        </form>\r\n    );\r\n}","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\r\nimport * as phonebookActions from '../../redux/phonebook/phonebook-actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n    const value = useSelector(getFilter);\r\n    const dispatch = useDispatch();\r\n    const onChange = e => dispatch(phonebookActions.changeFilter(e.target.value));\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <label className={s.label}>\r\n                Find contacts by name\r\n               <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className={s.input}\r\n                />\r\n            </label>\r\n        </div>\r\n    );\r\n}","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport ContactList from '../../components/ContactList';\r\nimport ContactForm from '../../components/ContactForm';\r\nimport Filter from '../../components/Filter';\r\nimport { fetchContacts } from '../../redux/phonebook/phonebook-operations';\r\nimport s from './ContactsView.module.css';\r\n\r\n\r\nexport default function ContactsView() {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => dispatch(fetchContacts()), [dispatch]);\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <h1 className={s.title}>\r\n                {' '}\r\n               Phonebook\r\n            </h1>\r\n            <ContactForm />\r\n            <h2>Contacts</h2>\r\n            <Filter />\r\n            <ContactList />\r\n        </div>\r\n    );\r\n}","import { useEffect } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nimport { ToastContainer } from 'react-toastify';\n\nimport Container from './components/Container';\nimport AppBar from './components/AppBar';\n\nimport HomeView from './views/HomeView';\nimport RegisterView from './views/RegisterView';\nimport LoginView from './views/LoginView';\nimport ContactsView from './views/ContactsView';\nimport { authOperations } from './redux/auth';\nimport authSelectors from './redux/auth/auth-selectors';\n\nfunction App() {\n  const isFetchingCurrentUser = useSelector(\n    authSelectors.getIsFetchingCurrentUser,\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isFetchingCurrentUser && (\n      <Container>\n        <AppBar />\n\n        <Switch>\n          <PublicRoute path=\"/\" exact>\n            <HomeView />\n          </PublicRoute>\n\n          <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\n            <RegisterView />\n          </PublicRoute>\n\n          <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n            <LoginView />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsView />\n          </PrivateRoute>\n        </Switch>\n\n        <ToastContainer autoClose={3000} position=\"top-center\" />\n      </Container>\n    )\n  );\n}\n\nexport default App;","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    changeFilter,\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n} from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactsSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n    [deleteContactSuccess]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactsRequest]: () => true,\r\n    [fetchContactsSuccess]: () => false,\r\n    [fetchContactsError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport authReducer from './auth/auth-slice';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: phonebookReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}